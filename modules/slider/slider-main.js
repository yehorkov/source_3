import Slider from "./slider";

export default class MainSlider extends Slider { // Экспортируем по-умолчанию класс, содержащий код из Slider 
    constructor(btns) { // Создаём новый конструктор и передаём аргумент кнопок на странице
        super(btns); // Вызываем родительский конструктор для кнопок (родитель - Slider)
    }

    showSlides(n) { // Создаём метод показа слайдов. n - отвечает за то, куда будет двигаться слайдер
        if (n > this.slides.length) { // Если n больше, чем кол-во слайдеров,
            this.slideIndex = 1; // то показать первый слайд
        }
                    // Граничные значения слайдера (условия вверху и внизу)
        if (n < 1) { // Если n меньше 1
            this.slideIndex = this.slides.lenght; // показываем первый слайд
        }
        
        try { // Оборачиваем отображение блока с информацией для избежания ошибок на другой странице сайта 
            this.hanson.style.opacity = '0'; // Устанавливаем начальное значение прозрачности для блока

            if (n === 3) { // Если пользователь находится на третьем слайде
                this.hanson.classList.add('animated'); // Добавляем блоку класс анимации
                setTimeout(() => { // Функция вызова через определённое время
                    this.hanson.style.opacity = '1'; // Устанавливаем новое значение прозрачности для блока
                    this.hanson.classList.add('slideInUp'); // Добавляем анимацию появления
                }, 3000); // Показываем блок через 3 секунды
            } else { // Иначе
                this.hanson.classList.remove('slideInUp'); // Убираем анимацию появления
            }
        } catch(e) { // Блок кода ошибки

        }

        this.slides.forEach(slide => { // Перебираем все слайдеры на странице
            slide.style.display = 'none'; // Устанавливаем им стиль отображения
        });

        this.slides[this.slideIndex - 1].style.display = 'block'; // Показываем первый слайд на странице (0-й индекс)
    }

    plusSlides(n) { // Метод показа следующего слайдера
        this.showSlides(this.slideIndex += n); // Вызываем метод showSlides и контролируем перелистывание слайдов
    }

    bindTriggers() { // Создаём метод работы кнопок на странице
        this.btns.forEach(item => { // Перебираем все кнопки на странице
            item.addEventListener('click', () => { // На каждую навешиваем обработчик события
                this.plusSlides(1); // Вызываем метод для переключения слайдов вперёд
            });

            item.parentNode.previousElementSibling.addEventListener('click', (e) => { // Навешиваем обработчик события на родителя данного item, и его предыдущий элемент
                e.preventDefault(); // Отменяем стандартное поведение браузера
                this.slideIndex = 1; // Показываем первый слайд
                this.showSlides(this.slideIndex); // Вызываем метод показа слайдов с индексом первого слайда
            })
        });

        document.querySelectorAll('.prevmodule').forEach(item => { // Получаем со страницы все кнопки переключения назад и перебираем их
            item.addEventListener('click', (e) => { // Навешиваем обработчик события
                e.stopPropagation(); //Прекращаем дальнейшую передачу текущего события.
                e.preventDefault(); // Отменяем страндартное поведение браузера
                this.plusSlides(-1); // Вызываем метод переключения слайдов с аргументом -1 (переключаем слайд на предыдущий)
            });
        });

        document.querySelectorAll('.nextmodule').forEach(item => { // Получаем со страницы все кнопки переключения вперёд и перебираем их
            item.addEventListener('click', (e) => { // Навешиваем обработчик события
                e.stopPropagation(); //Прекращаем дальнейшую передачу текущего события.
                e.preventDefault(); // Отменяем страндартное поведение браузера
                this.plusSlides(1); // Вызываем метод переключения слайдов с аргументом 1 (переключаем слайд на следующий)
            });
        });
    }

    render() { // Главный метод, который будет выполнять самые главные действия на странице
        if (this.container) { // Если контейнер был передан
            try { // Оборачиваем отображение блока с информацией для избежания ошибок на другой странице сайта.
                this.hanson = document.querySelector('.hanson'); // Получаем элемент с классом hanson
            } catch(e) { // Блок кода ошибки
    
            }

            this.showSlides(this.slideIndex); // Первая инициализация метода (отображаем первую страницу сайта)
            this.bindTriggers(); // Вызываем метод работы кнопок
        }
    }
}